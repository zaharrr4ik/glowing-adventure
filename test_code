import pygame
import requests
import pygame_textinput

pygame.init()

screen = pygame.display.set_mode((600, 450))
pygame.display.set_caption("Карты")
font = pygame.font.Font(None, 32)

map_server = "https://static-maps.yandex.ru/1.x"
geo_server = "https://geocode-maps.yandex.ru/1.x"
api_key = "f3a0fe3a-b07e-4840-a1da-06f18b2ddf13"

x_pos, y_pos = 37.677751, 55.757718
zoom = 0.016457
color_mode = "light"
current_marker = None

text_box = pygame_textinput.TextInputVisualizer(font_object=font)
text_box.value = "Куда идем?"


def get_map():
    params = {
        "ll": f"{x_pos},{y_pos}",
        "spn": f"{zoom},{zoom}",
        "l": "map",
        "apikey": api_key,
    }
    if current_marker:
        params["pt"] = f"{current_marker[0]},{current_marker[1]},pm2rdm"
    response = requests.get(map_server, params=params)
    if response.ok:
        with open("map.png", "wb") as f:
            f.write(response.content)
        return pygame.image.load("map.png")


def find_place(place_name):
    params = {
        "apikey": api_key,
        "geocode": place_name,
        "format": "json"
    }
    response = requests.get(geo_server, params=params)
    if response.ok:
        data = response.json()
        try:
            coords = data["response"]["GeoObjectCollection"]["featureMember"][0]["GeoObject"]["Point"]["pos"]
            return list(map(float, coords.split()))
        except:
            return None
    return None


def draw_ui():
    pygame.draw.rect(screen, (255, 255, 255), (10, 410, 400, 30))
    screen.blit(text_box.surface, (15, 415))

    pygame.draw.rect(screen, (0, 120, 215), (420, 410, 80, 30))
    search_label = font.render("Найти", True, (255, 255, 255))
    screen.blit(search_label, (430, 415))

    mode_text = "Ночь" if color_mode == "light" else "День"
    pygame.draw.rect(screen, (0, 120, 215), (510, 410, 80, 30))
    mode_label = font.render(mode_text, True, (255, 255, 255))
    screen.blit(mode_label, (520, 415))


map_img = get_map()
clock = pygame.time.Clock()
running = True

while running:
    events = pygame.event.get()

    text_box.update(events)

    for event in events:
        if event.type == pygame.QUIT:
            running = False

        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_PAGEUP:
                zoom = max(zoom / 1.5, 0.0001)
                map_img = get_map()
            elif event.key == pygame.K_PAGEDOWN:
                zoom = min(zoom * 1.5, 90.0)
                map_img = get_map()
            elif event.key == pygame.K_UP:
                y_pos += zoom
                if y_pos > 85: y_pos = 85
                map_img = get_map()
            elif event.key == pygame.K_DOWN:
                y_pos -= zoom
                if y_pos < -85: y_pos = -85
                map_img = get_map()
            elif event.key == pygame.K_LEFT:
                x_pos -= zoom
                if x_pos < -180: x_pos = 180 - (abs(x_pos) - 180)
                map_img = get_map()
            elif event.key == pygame.K_RIGHT:
                x_pos += zoom
                if x_pos > 180: x_pos = -180 + (x_pos - 180)
                map_img = get_map()
            elif event.key == pygame.K_RETURN:
                coords = find_place(text_box.value)
                if coords:
                    x_pos, y_pos = coords
                    current_marker = coords
                    zoom = 0.016
                    map_img = get_map()

        if event.type == pygame.MOUSEBUTTONDOWN:
            if 420 <= event.pos[0] <= 500 and 410 <= event.pos[1] <= 440:
                coords = find_place(text_box.value)
                if coords:
                    x_pos, y_pos = coords
                    current_marker = coords
                    zoom = 0.016
                    map_img = get_map()

            elif 510 <= event.pos[0] <= 590 and 410 <= event.pos[1] <= 440:
                color_mode = "dark" if color_mode == "light" else "light"
                map_img = get_map()

    screen.blit(map_img, (0, 0))
    draw_ui()
    pygame.display.flip()
    clock.tick(30)

pygame.quit()
