import pygame
import random
import os

pygame.init()

# Константы
FPS = 60
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GRAY = (50, 50, 50)
data_dir = os.path.join(os.path.dirname(__file__), "data")

class Character:
    def __init__(self, name, image_name, speed):
        self.name = name
        self.image_name = image_name
        self.speed = speed
        self.image = None
        self.rect = None

characters = [
    Character("Человек", "human.png", 5),
    Character("Слизь", "slime.png", 2),
    Character("Хомяк", "hamster.png", 3),
]

def draw_pixel_text(surface, text, font_size, x, y, color):
    font = pygame.font.Font(None, font_size)
    text_surface = font.render(text, True, color)
    blurred_surface = pygame.transform.scale(text_surface, (text_surface.get_width() * 2, text_surface.get_height() * 2))
    blurred_surface = pygame.transform.scale(blurred_surface, text_surface.get_size())
    surface.blit(blurred_surface, (x, y))

def input_box(screen, message, width, height, stars):
    font = pygame.font.Font(None, 36)
    input_rect = pygame.Rect( (width - 600) // 2, (height - 50) // 2, 600, 50) # Центрируем прямоугольник
    color_active = pygame.Color('lightskyblue3')
    color_passive = pygame.Color('chartreuse4')
    color = color_passive
    active = False
    text = ''
    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
            if event.type == pygame.MOUSEBUTTONDOWN:
                if input_rect.collidepoint(event.pos):
                    active = True
                else:
                    active = False
            if event.type == pygame.KEYDOWN:
                if active:
                    if event.key == pygame.K_RETURN:
                        running = False
                    elif event.key == pygame.K_BACKSPACE:
                        text = text[:-1]
                    else:
                        text += event.unicode

        screen.fill(BLACK)  # Заливаем экран черным

        # Рисуем звезды
        for star in stars:
            pygame.draw.circle(screen, WHITE, (star[0], star[1]), star[2])

        draw_pixel_text(screen, message, 48, input_rect.centerx - 200, input_rect.top - 50, WHITE)  # надпись над полем ввода

        if active:
            color = color_active
        else:
            color = color_passive
        pygame.draw.rect(screen, color, input_rect, 2)
        text_surface = font.render(text, True, color)
        screen.blit(text_surface, (input_rect.x + 5, input_rect.y + 5))
        pygame.display.flip()
    return text


class MainScreen:
    def __init__(self, width, height):
        self.width = width
        self.height = height
        self.screen = pygame.display.set_mode((self.width, self.height), pygame.FULLSCREEN)
        self.stars = []
        self.generate_stars(200)
        self.load_images()
        self.player_name = ""
        self.selected_character = None

    def generate_stars(self, num_stars):
        for _ in range(num_stars):
            x = random.randint(0, self.width)
            y = random.randint(0, self.height)
            size = random.randint(1, 3)
            self.stars.append([x, y, size])

    def draw(self):
        self.screen.fill(BLACK)
        for star in self.stars:
            pygame.draw.circle(self.screen, WHITE, (star[0], star[1]), star[2])
        draw_pixel_text(self.screen, "Сквозь Миры", 100, self.width//2 - 200, 100, WHITE)
        if self.selected_character:
            draw_pixel_text(self.screen, f"Выбран персонаж: {self.selected_character.name}, Имя: {self.player_name}", 48, self.width // 2 - 200, self.height // 2 + 100, WHITE)

    def load_images(self):
        self.character_images = []
        for char_data in characters:
            try:
                image = pygame.image.load(os.path.join(data_dir, char_data.image_name)).convert_alpha()
                image = pygame.transform.scale(image, (image.get_width() // 2, image.get_height() // 2))
                self.character_images.append(image)
                char_data.image = image
                char_data.rect = image.get_rect()
            except pygame.error as e:
                print(f"Ошибка загрузки изображения {char_data.image_name}: {e}")
                self.character_images.append(None)

    def run(self):
        running = True
        while running:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    running = False
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_SPACE and self.selected_character is None:
                        self.choose_character()
                    if event.key == pygame.K_ESCAPE:
                        self.show_exit_menu()
            self.draw()
            pygame.display.flip()

    def choose_character(self):
        while True:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    quit()
                if event.type == pygame.MOUSEBUTTONDOWN:
                    for i, char in enumerate(characters):
                        if self.character_images[i]:
                            char_rect_width = self.character_images[i].get_width()
                            total_width = sum(self.character_images[j].get_width() for j in range(len(characters)) if self.character_images[j]) + 50 * (len(characters) - 1)
                            x_offset = (self.width - total_width) // 2 + i * (char_rect_width + 50)
                            char.rect.topleft = (x_offset, self.height // 2 - 100)
                            if char.rect.collidepoint(event.pos):
                                self.selected_character = char
                                self.player_name = input_box(self.screen, "Введите имя персонажа:", self.width, self.height, self.stars)
                                return

            self.screen.fill(BLACK)
            for star in self.stars:
                pygame.draw.circle(self.screen, WHITE, (star[0], star[1]), star[2])
            for i, char in enumerate(characters):
                if self.character_images[i]:
                    char_rect_width = self.character_images[i].get_width()
                    total_width = sum(self.character_images[j].get_width() for j in range(len(characters)) if self.character_images[j]) + 50 * (len(characters) - 1)
                    x_offset = (self.width - total_width) // 2 + i * (char_rect_width + 50)
                    char.rect.topleft = (x_offset, self.height // 2 - 100)
                    self.screen.blit(char.image, char.rect)
            pygame.display.flip()

            self.screen.fill(BLACK)
            for star in self.stars:
                pygame.draw.circle(self.screen, WHITE, (star[0], star[1]), star[2])
            for i, char in enumerate(characters):
                if self.character_images[i]:
                    char_rect_width = self.character_images[i].get_width()
                    total_width = sum(self.character_images[j].get_width() for j in range(len(characters)) if self.character_images[j]) + 50 * (len(characters) - 1)
                    x_offset = (self.width - total_width) // 2 + i * (char_rect_width + 50)
                    char.rect.topleft = (x_offset, self.height // 2 - 100)
                    self.screen.blit(char.image, char.rect)
            pygame.display.flip()

    def show_exit_menu(self):
        exit_menu = True
        while exit_menu:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    quit()
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_y:
                        pygame.quit()
                        quit()
                    if event.key == pygame.K_n:
                        exit_menu = False
            self.screen.fill(BLACK)
            draw_pixel_text(self.screen, "¿Выйти из игры?", 50, self.width // 2 - 100, self.height // 2 - 50, WHITE)
            draw_pixel_text(self.screen, "(y/n)", 30, self.width // 2 - 30, self.height // 2, WHITE)
            pygame.display.flip()


# Создание главного экрана и запуск игры
infoObject = pygame.display.Info()
mainscreen = MainScreen(infoObject.current_w, infoObject.current_h)
mainscreen.run()
pygame.quit()
